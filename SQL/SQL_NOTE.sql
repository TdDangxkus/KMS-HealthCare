----------------------------------------------------------------1. Ng∆∞·ªùi d√πng & h·ªá th·ªëng------------------------------------------------------------------------
-- B·∫£ng l∆∞u th√¥ng tin t√†i kho·∫£n
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,                   -- Kh√≥a ch√≠nh, ƒë·ªãnh danh ng∆∞·ªùi d√πng
    username VARCHAR(50) UNIQUE NOT NULL,                     -- T√™n ƒëƒÉng nh·∫≠p, kh√¥ng ƒë∆∞·ª£c tr√πng
    email VARCHAR(100) UNIQUE NOT NULL,                       -- Email ƒëƒÉng k√Ω, duy nh·∫•t
    password_hash VARCHAR(255) NOT NULL,                      -- M·∫≠t kh·∫©u ƒë√£ m√£ h√≥a
    role_id INT NOT NULL,                                     -- Li√™n k·∫øt ƒë·∫øn b·∫£ng roles
    status ENUM('active', 'inactive', 'suspended') DEFAULT 'active', -- Trang th√°i t√†i kho·∫£n
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,           -- Th·ªùi gian t·∫°o t√†i kho·∫£n
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (role_id) REFERENCES roles(role_id)                -- R√†ng bu·ªôc vai tr√≤ ng∆∞·ªùi d√πng
);

-- B·∫£ng l∆∞u vai tr√≤
CREATE TABLE roles (
    role_id INT AUTO_INCREMENT PRIMARY KEY,                   -- Kh√≥a ch√≠nh
    role_name VARCHAR(50) UNIQUE NOT NULL,                    -- T√™n vai tr√≤: patient, admin, doctor
	description TEXT										  -- 'M√¥ t·∫£ vai tr√≤ n·∫øu c·∫ßn',
);

-- Cho n√†y n√™n cho v√†o tr∆∞·ªõc v√†i role 
-- khi ƒëƒÉng k√Ω t√†i kho·∫£n b·∫•t k·ª≥ t√†i kho·∫£n n√†o c≈©ng s·∫Ω c√≥ role l√† patient
-- sau ƒë√≥ admin s·ªÖ set role cho b√°c sƒ© or admin m·ªõi n·∫øu c·∫ßn
-- role b√°c sƒ© s·∫Ω c√≥ kh√° nhi·ªÅu lo·∫°i... ho·∫∑c l√† ph√¢n trong chuy√™n khoa th√¥ng tin c·ªßa b√°c sƒ©
-- nh∆∞ng n·∫øu l√† nh∆∞ v·∫≠y th√¨ c√°ch g·ª≠i th√¥ng b√°o hi·ªán t·∫°i ko ·ªïn

-- B·∫£ng l∆∞u th√¥ng tin ng∆∞·ªùi d√πng
CREATE TABLE users_info (
    id INT AUTO_INCREMENT PRIMARY KEY,                        -- Kh√≥a ch√≠nh
    user_id INT NOT NULL,                                     -- Kh√≥a ngo·∫°i li√™n k·∫øt v·ªõi b·∫£ng users
    full_name VARCHAR(100),                                   -- H·ªç t√™n ƒë·∫ßy ƒë·ªß
    gender ENUM('Nam', 'N·ªØ', 'Kh√°c'),                         -- Gi·ªõi t√≠nh
    phone VARCHAR(15) UNIQUE,                                 -- S·ªë ƒëi·ªán tho·∫°i (n·∫øu c√≥), c≈©ng duy nh·∫•t
    date_of_birth DATE,                                       -- Ng√†y sinh
    profile_picture VARCHAR(255),                             -- URL ·∫£nh ƒë·∫°i di·ªán (n·∫øu c√≥)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);
-- Th√¥ng tin ng∆∞·ªùi d√πng c√≥ th·ªÉ do ch√≠nh ng∆∞·ªùi d√πng nh·∫≠p sau khi ƒëƒÉng k√Ω
-- ho·∫∑c l√† ƒë∆∞·ª£c AI chatbox thu nh·∫≠p th√¥ng qua vi·ªác chat v·ªõi ng∆∞·ªùi d√πng l√∫t ban ƒë·∫ßu c·∫ßn
-- v√≠ d·ª• n·∫øu ng∆∞·ªùi d√πng ƒë∆∞·ª£c AI y√™u c√¢u ƒëi kh√°m b√°c sƒ© v√† ng∆∞·ªùi d√πng ch·∫•p nh·∫≠n th√¨
-- AI s·∫Ω ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ƒë·∫ßy ƒë·ªß th√¥ng tin ch∆∞a n·∫øu ch∆∞a th√¨ s·∫Ω h·ªèi th√¥ng tin ng∆∞·ªùi d√πng
-- ho·∫∑c ki√™u ng∆∞·ªùi d√πng t·ª± nh·∫≠p v√† sau ƒë√≥ th√¨ h·ªèi nh∆∞ng c√¢u h·ªèi c·∫ßn thi·∫øt c·∫ßn ƒë·ªÉ ƒë·∫∑t l·ªãch kh√°m
-- nh∆∞ ng√†y kh√°m b√°c sƒ© mong mu·ªën n·∫øu ko bik th√¨ random ph√π h·ª£p v·ªõi b·ªánh mu·ªën kh√°m

-- s·∫Ω ƒë∆∞·ª£c t·∫°o khi ng∆∞·ªùi d√πng ch∆∞a c√≥ t√†i kho·∫£n v√† c√≥ nhu c·∫ßu ƒë·∫∑t l·ªãch kh√°m th√¨ 
-- AI s·∫Ω h·ªèi nh∆∞ng th√¥ng tin n√†y v√† th·ª±c hi·ªán ƒë·∫∑t l·ªãch kh√°m khi ƒë·∫ßy ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt
-- v√† x√°c nh·∫≠n ƒë·∫∑t
CREATE TABLE guest_users (
    guest_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(255),                                 -- T√™n ƒë·∫ßy ƒë·ªß m·ª•c n√†y c·ªßa guest ch·ªâ ƒë∆∞·ª£c nh·∫≠p v√†o do chatbot l√†m khi ng∆∞·ªùi tr·∫£ l·ªùi cung c·∫•p ƒë·∫ßy ƒë·ªß
    phone VARCHAR(20),                                      -- s·ªë ƒëi·ªán m·ª•c n√†y c·ªßa guest ch·ªâ ƒë∆∞·ª£c nh·∫≠p v√†o do chatbot l√†m khi ng∆∞·ªùi tr·∫£ l·ªùi cung c·∫•p ƒë·∫ßy ƒë·ªß
    email VARCHAR(255),                                     -- Email kh√¥ng b·∫Øt bu·ªôc n·∫øu ko c√≥ m·ª•c n√†y c·ªßa guest ch·ªâ ƒë∆∞·ª£c nh·∫≠p v√†o do chatbot l√†m khi ng∆∞·ªùi tr·∫£ l·ªùi cung c·∫•p ƒë·∫ßy ƒë·ªß
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
);

-- B·∫£ng l∆∞u ƒë·ªãa ch·ªâ ng∆∞·ªùi d√πng 
CREATE TABLE user_addresses (
    address_id  INT AUTO_INCREMENT PRIMARY KEY,       -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,                             -- ID ng∆∞·ªùi d√πng li√™n k·∫øt v·ªõi b·∫£ng users
    address_line VARCHAR(255) NOT NULL,               -- ƒê·ªãa ch·ªâ chi ti·∫øt: s·ªë nh√†, t√™n ƒë∆∞·ªùng, cƒÉn h·ªô...
    ward VARCHAR(100),                                -- Ph∆∞·ªùng/x√£
    district VARCHAR(100),                            -- Qu·∫≠n/huy·ªán
    city VARCHAR(100),                                -- Th√†nh ph·ªë
    postal_code VARCHAR(20),                          -- M√£ b∆∞u ch√≠nh (n·∫øu c√≥)
    country VARCHAR(100) DEFAULT 'Vietnam',           -- Qu·ªëc gia, m·∫∑c ƒë·ªãnh l√† Vi·ªát Nam
    is_default BOOLEAN DEFAULT FALSE,                 -- ƒê·ªãa ch·ªâ m·∫∑c ƒë·ªãnh (ch·ªâ 1 ƒë·ªãa ch·ªâ c·ªßa user l√† TRUE)
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,    -- Th·ªùi gian t·∫°o ƒë·ªãa ch·ªâ
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  -- Th·ªùi gian c·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ
    
    FOREIGN KEY (user_id) REFERENCES users(user_id)        -- Kh√≥a ngo·∫°i li√™n k·∫øt v·ªõi b·∫£ng users
);
-- b·∫£ng l∆∞u ƒë·ªãa ch·ªâ n√†y c≈©ng ko qu√° c·∫•n thi·∫øt nh∆∞ng n√≥ d√πng cho th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠
-- v√† 1 ng∆∞·ªùi c≈©ng c√≥ th·ªÉ c√≥ nhi·ªÅu ƒë·ªãa ch·ªâ

CREATE TABLE notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,           -- M√£ th√¥ng b√°o, t·ª± tƒÉng, d√πng l√†m kh√≥a ch√≠nh
    target_role_id INT,                                       -- ID c·ªßa vai tr√≤ ƒë∆∞·ª£c g·ª≠i th√¥ng b√°o n·∫øu ch·ªâ mu·ªën g·ª≠i t·ªõi 1 nh·ªëm ƒë·ªëi t∆∞·ªüng nh·∫•t ƒë·ªãnh
    title VARCHAR(255) NOT NULL,                              -- Ti√™u ƒë·ªÅ c·ªßa th√¥ng b√°o (ng·∫Øn g·ªçn)
    message TEXT NOT NULL,                                    -- N·ªôi dung chi ti·∫øt c·ªßa th√¥ng b√°o
    type VARCHAR(50),                                         -- Lo·∫°i th√¥ng b√°o: v√≠ d·ª• 'system', 'AI alert', 'reminder'...
    is_global BOOLEAN DEFAULT FALSE,                          -- N·∫øu l√† TRUE, th√¥ng b√°o s·∫Ω g·ª≠i ƒë·∫øn to√†n b·ªô ng∆∞·ªùi d√πng
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,            -- Th·ªùi gian t·∫°o th√¥ng b√°o
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,

    FOREIGN KEY (target_role_id) REFERENCES roles(role_id)   -- R√†ng bu·ªôc t·ªõi b·∫£ng roles
);

CREATE TABLE user_notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,                        -- Kh√≥a ch√≠nh cho b·∫£ng √°nh x·∫°
    notification_id INT NOT NULL,                             -- ID c·ªßa th√¥ng b√°o (kh√≥a ngo·∫°i)
    user_id INT NOT NULL,                                     -- ID c·ªßa ng∆∞·ªùi d√πng nh·∫≠n th√¥ng b√°o
    is_read BOOLEAN DEFAULT FALSE,                            -- ƒê√£ ƒë·ªçc hay ch∆∞a (FALSE = ch∆∞a ƒë·ªçc)
    received_at DATETIME DEFAULT CURRENT_TIMESTAMP,           -- Th·ªùi ƒëi·ªÉm ng∆∞·ªùi d√πng nh·∫≠n th√¥ng b√°o

    FOREIGN KEY (notification_id) REFERENCES notifications(notification_id),   -- R√†ng bu·ªôc kh√≥a ngo·∫°i t·ªõi b·∫£ng th√¥ng b√°o
    FOREIGN KEY (user_id) REFERENCES users(user_id)                            -- R√†ng bu·ªôc kh√≥a ngo·∫°i t·ªõi b·∫£ng ng∆∞·ªùi d√πng
);

‚úÖ Logic khi g·ª≠i th√¥ng b√°o:
N·∫øu is_global = TRUE: L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng, insert v√†o user_notifications.

N·∫øu target_role IS NOT NULL: L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng c√≥ vai tr√≤ t∆∞∆°ng ·ª©ng (users.role = target_role), insert v√†o user_notifications.

N·∫øu g·ª≠i c√° nh√¢n: Insert 1 d√≤ng v√†o user_notifications v·ªõi user_id c·ª• th·ªÉ.

‚úÖ Giao di·ªán Admin G·ª≠i Th√¥ng B√°o (v√≠ d·ª•):
Ti√™u ƒë·ªÅ

N·ªôi dung

H√¨nh th·ª©c g·ª≠i:

üîò G·ª≠i to√†n h·ªá th·ªëng

üîò G·ª≠i theo vai tr√≤ ‚Üí Ch·ªçn vai tr√≤ (dropdown)

üîò G·ª≠i ng∆∞·ªùi d√πng c·ª• th·ªÉ ‚Üí Ch·ªçn user

‚Üí Backend s·∫Ω x·ª≠ l√Ω t√πy theo l·ª±a ch·ªçn, insert h·ª£p l√Ω v√†o user_notifications.

----------------------------------------------------------------2. ChƒÉm s√≥c s·ª©c kh·ªèe------------------------------------------------------------------------

-- B·∫£ng medical_categories: Ph√¢n lo·∫°i b·ªánh v√† chuy√™n khoa
CREATE TABLE medical_categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,       -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                       -- T√™n chuy√™n khoa
    description TEXT,                                 -- M√¥ t·∫£
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng diseases: Danh s√°ch c√°c b·ªánh
CREATE TABLE diseases (
    disease_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                       -- T√™n b·ªánh
    description TEXT,                                 -- M√¥ t·∫£ v·ªÅ b·ªánh
    treatment_guidelines TEXT,                        -- H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã
    severity ENUM('nh·∫π', 'trung b√¨nh', 'nghi√™m tr·ªçng') DEFAULT 'trung b√¨nh'; -- M·ª©c ƒë·ªô nghi·ªám tr·ªông
    category_id INT,                                  -- Li√™n k·∫øt ƒë·∫øn chuy√™n khoa
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES medical_categories(category_id)
);

-- B·∫£ng symptoms: Danh s√°ch c√°c tri·ªáu ch·ª©ng
CREATE TABLE symptoms (
    symptom_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                       -- T√™n tri·ªáu ch·ª©ng
    alias TEXT,
    description TEXT,                                 -- M√¥ t·∫£ tri·ªáu ch·ª©ng
    followup_question TEXT
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng disease_symptoms: B·∫£ng n·ªëi gi·ªØa b·ªánh v√† tri·ªáu ch·ª©ng
CREATE TABLE disease_symptoms (
    disease_id INT NOT NULL,                          -- ID b·ªánh
    symptom_id INT NOT NULL,                          -- ID tri·ªáu ch·ª©ng
    PRIMARY KEY (disease_id, symptom_id),             -- Kh√≥a ch√≠nh k√©p
    FOREIGN KEY (disease_id) REFERENCES diseases(disease_id),
    FOREIGN KEY (symptom_id) REFERENCES symptoms(symptom_id)
);

-- B·∫£ng l∆∞u ti·ªÅn s·ª≠ tri·ªáu ch·ª©ng (b·∫£ng n√†y c√≥ th·ªÉ ƒë∆∞·ª£c b√°c sƒ© c·∫≠p nh·∫≠p ho·∫∑c AI c·∫≠p nh·∫≠p th√¥ng qua chat_log)
CREATE TABLE user_symptom_history (
    id INT AUTO_INCREMENT PRIMARY KEY,                   -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,                                -- Kh√≥a ngo·∫°i li√™n h·∫øt t·ªõi user
    symptom_id INT NOT NULL,                             -- kh√≥a ngo·∫°i li√™n k·∫øt t·ªõi tri·ªáu ch·ª©ng
    record_date DATE NOT NULL,                           -- Ng√†y l∆∞u tri·ªáu ch·ª©ng
    notes TEXT,                                          -- Ghi ch·ªß chi ti·∫øt n·∫øu c√≥
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (symptom_id) REFERENCES symptoms(symptom_id)
);

-- record_date o day ko de auto vi neu benh nhan mioeu tra 
-- b·ªánh tr√¥ng qu√° kh∆∞ th√¨ c√≤n c√≥ th·ªÉ nh·∫≠p

-- B·∫£ng clinics: Danh s√°ch b·ªánh vi·ªán/ph√≤ng kh√°m
CREATE TABLE clinics (
    clinic_id INT AUTO_INCREMENT PRIMARY KEY,           -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                         -- T√™n ph√≤ng kh√°m
    address TEXT NOT NULL,                              -- ƒê·ªãa ch·ªâ
    phone VARCHAR(20),                                  -- S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá
    email VARCHAR(255),                                 -- Email (n·∫øu c√≥)
    description TEXT,                                   -- M√¥ t·∫£ chi ti·∫øt
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng specialties: Chuy√™n ng√†nh y t·∫ø
CREATE TABLE specialties (
    specialty_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                         -- T√™n chuy√™n ng√†nh (n·ªôi khoa, tim m·∫°ch‚Ä¶)
    description TEXT,                                   -- M√¥ t·∫£ chuy√™n ng√†nh
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng doctors: Th√¥ng tin b√°c sƒ©
CREATE TABLE doctors (
    doctor_id INT AUTO_INCREMENT PRIMARY KEY,           -- Kh√≥a ch√≠nh
    user_id INT NOT NULL UNIQUE,                        -- Li√™n k·∫øt v·ªõi b·∫£ng users
    specialty_id INT NOT NULL,                          -- Li√™n k·∫øt ƒë·∫øn chuy√™n ng√†nh
    clinic_id INT,                                      -- Li√™n k·∫øt ƒë·∫øn ph√≤ng kh√°m
    biography TEXT,                                     -- Ti·ªÉu s·ª≠/b·∫±ng c·∫•p
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (specialty_id) REFERENCES specialties(specialty_id),
    FOREIGN KEY (clinic_id) REFERENCES clinics(clinic_id)
);

-- B·∫£ng doctor_schedules: L·ªãch l√†m vi·ªác c·ªßa b√°c sƒ©
CREATE TABLE doctor_schedules (
    schedule_id INT AUTO_INCREMENT PRIMARY KEY,         -- Kh√≥a ch√≠nh
    doctor_id INT NOT NULL,                             -- Li√™n k·∫øt ƒë·∫øn b·∫£ng doctors
    clinic_id INT,                                      -- N∆°i l√†m vi·ªác
    day_of_week VARCHAR(20) NOT NULL,                   -- Th·ª© trong tu·∫ßn (Monday, Tuesday...)
    start_time TIME NOT NULL,                           -- Gi·ªù b·∫Øt ƒë·∫ßu
    end_time TIME NOT NULL,                             -- Gi·ªù k·∫øt th√∫c
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id),
    FOREIGN KEY (clinic_id) REFERENCES clinics(clinic_id)
);

-- B·∫£ng appointments: L·ªãch h·∫πn kh√°m b·ªánh cho ng∆∞·ªùi d√πng ƒë√£ c√≥ t√†i kho·∫£n
CREATE TABLE appointments (
    appointment_id INT AUTO_INCREMENT PRIMARY KEY,        -- Kh√≥a ch√≠nh
    user_id INT,                                 -- Li√™n k·∫øt ƒë·∫øn b·∫£ng users
    guest_id INT,
    doctor_id INT NOT NULL,                               -- Li√™n k·∫øt ƒë·∫øn b·∫£ng doctors
    clinic_id INT,                                        -- Li√™n k·∫øt ƒë·∫øn b·∫£ng clinics (ph√≤ng kh√°m)
    appointment_time DATETIME NOT NULL,                   -- Th·ªùi gian ƒë·∫∑t l·ªãch
    reason TEXT,                                          -- L√Ω do kh√°m b·ªánh
    status VARCHAR(50) DEFAULT 'pending',                 -- Tr·∫°ng th√°i: pending, confirmed, completed, canceled
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (guest_id) REFERENCES guest_users(guest_id),
    FOREIGN KEY (doctor_id) REFERENCES doctors(doctor_id),
    FOREIGN KEY (clinic_id) REFERENCES clinics(clinic_id)
);

-- B·∫£ng prescriptions: ƒê∆°n thu·ªëc sau khi kh√°m
CREATE TABLE prescriptions (
    prescription_id INT AUTO_INCREMENT PRIMARY KEY,     -- Kh√≥a ch√≠nh
    appointment_id INT NOT NULL,                        -- Li√™n k·∫øt ƒë·∫øn l·ªãch h·∫πn
    prescribed_date DATE DEFAULT CURRENT_DATE,          -- Ng√†y k√™ ƒë∆°n
    medications TEXT,                                   -- Thu·ªëc (c√≥ th·ªÉ l∆∞u d·∫°ng JSON/text)
    notes TEXT,                                         -- Ghi ch√∫ d√πng thu·ªëc
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (appointment_id) REFERENCES appointments(appointment_id)
);

-- B·∫£ng medical_records: Ghi ch√∫ kh√°m c·ªßa b√°c sƒ©
CREATE TABLE medical_records (
    med_rec_id INT AUTO_INCREMENT PRIMARY KEY,             -- Kh√≥a ch√≠nh
    appointment_id INT NOT NULL,                        -- Li√™n k·∫øt ƒë·∫øn cu·ªôc h·∫πn
    note_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- Th·ªùi ƒëi·ªÉm ghi ch√∫
    diagnosis TEXT,                                     -- Ch·∫©n ƒëo√°n
    recommendations TEXT,                               -- H∆∞·ªõng d·∫´n/ch·ªâ ƒë·ªãnh
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (appointment_id) REFERENCES appointments(appointment_id)
);

----------------------------------------------------------------3. Chatbot AI-------------------------------------------------------------------------------
-- B·∫£ng l∆∞u d·ªØ li·ªáu s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ c·ªßa ng∆∞·ªùi d√πng (c√¢n n·∫∑ng, huy·∫øt √°p, gi·∫•c ng·ªß, v.v.)
CREATE TABLE health_records (
    record_id INT AUTO_INCREMENT PRIMARY KEY,			 -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,								 -- li√™n k·∫øt ƒë·∫øn b·∫£ng users
    record_date DATE NOT NULL,							 -- ng√†y ghi nh·∫≠n d·ªØ li·ªáu
    weight FLOAT,										 -- c√¢n n·∫∑ng (kg)
    blood_pressure VARCHAR(20),							 -- huy·∫øt √°p, vd: "120/80"
    sleep_hours FLOAT,									 -- s·ªë gi·ªù ng·ªß
    notes TEXT,											 -- ghi ch√∫ th√™m n·∫øu c√≥
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng l∆∞u h·ªôi tho·∫°i gi·ªØa ng∆∞·ªùi d√πng v√† chatbot AI
CREATE TABLE chat_logs (
    chat_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,									     -- ng∆∞·ªùi d√πng chat (c√≥ th·ªÉ null n·∫øu l√† kh√°ch)
    guest_id INT,					                     -- phi√™n chat c·ªßa kh√°ch (n·∫øu user_id null)
	intent VARCHAR(100),                                 -- √Ω ƒë·ªãnh
    message TEXT NOT NULL,                               -- n·ªôi dung tin nh·∫Øn
    sender ENUM('user', 'bot') NOT NULL,                 -- ng∆∞·ªùi g·ª≠i tin nh·∫Øn
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT chk_user_or_guest                             --ki·ªÉm tra xem v√† b·∫Øt bu·ªôc l√† ph·∫£i c√≥ 1 trong 2 gi√° tr·ªã n√†y v√† ko th·ªÉ ƒë·ªÉ null ho√†n to√†n
        CHECK (
            (user_id IS NOT NULL AND guest_id IS NULL) OR
            (user_id IS NULL AND guest_id IS NOT NULL)
        ),

    FOREIGN KEY (guest_id) REFERENCES guest_users(guest_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng l∆∞u k·∫øt qu·∫£ d·ª± ƒëo√°n b·ªánh t·ª´ AI cho t·ª´ng l·∫ßn d·ª± ƒëo√°n
CREATE TABLE health_predictions (
    prediction_id INT AUTO_INCREMENT PRIMARY KEY,		 -- Kh√≥a ch√≠nh, t·ª± ƒë·ªông tƒÉng
    user_id INT NOT NULL,								 -- li√™n k·∫øt ƒë·∫øn ng∆∞·ªùi d√πng
	record_id INT NOT NULL,                              -- li√™n k·∫øt ƒë·∫øn d·ªØ li·ªáu s·ª©c kh·ªèe c·ª• th·ªÉ
	chat_id INT,                                         -- kh√≥a ngo·∫°i li√™n k·∫øt ƒë·∫øn chat_logs
    prediction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- th·ªùi gian d·ª± ƒëo√°n
    confidence_score FLOAT,                              -- ƒë·ªô tin c·∫≠y d·ª± ƒëo√°n (0-1)
    details TEXT,                                        -- chi ti·∫øt th√™m v·ªÅ d·ª± ƒëo√°n (json ho·∫∑c text)
    
    CHECK (confidence_score BETWEEN 0 AND 1),
    
    FOREIGN KEY (user_id) REFERENCES users(user_id),
	FOREIGN KEY (record_id) REFERENCES health_records(record_id),
	FOREIGN KEY (chat_id) REFERENCES chat_logs(chat_id)
);

-- B·∫£ng li√™n k·∫øt b√™nh v·ªõi d·ª± ƒëo√°n 
CREATE TABLE prediction_diseases (
    id INT AUTO_INCREMENT PRIMARY KEY,
    prediction_id INT NOT NULL,                         -- Kh√≥a ngo·∫°i ƒë·∫øn health_predictions
    disease_id INT NOT NULL,                            -- Kh√≥a ngo·∫°i ƒë·∫øn diseases
    disease_name_raw VARCHAR(255) DEFAULT NULL,         -- Ch·ª©a t√™n b·ªánh ƒë∆∞·ª£c ph·ªèng ƒëo√°n t·ª´ GPT n·∫øu nh∆∞ trong danh s√°ch b·ªánh kh√¥ng c√≥
    confidence FLOAT CHECK (confidence BETWEEN 0 AND 1),-- ƒê·ªô tin c·∫≠y (0‚Äì1) 0 nghƒ©a l√† r·∫•t kh√¥ng ch·∫Øc ch·∫Øn.
                                                        -- 1 nghƒ©a l√† r·∫•t ch·∫Øc ch·∫Øn. --T√¥i nghƒ© b·ªánh n√†y l√† A (90%), b·ªánh B (70%), c√≤n l·∫°i l√† C (30%)
                                                        -- s·∫Ω kh√¥ng c√≥ b·∫•t k√Ω l·ªánh n√†o chac chan se la b·ªánh ƒë√≥ 
    disease_summary TEXT,                               -- M√¥ t·∫£ t√≥m t·∫Øt b·ªánh do GPT sinh ra
    disease_care TEXT,                                  -- G·ª£i √Ω chƒÉm s√≥c nh·∫π nh√†ng do GPT ƒë·ªÅ xu·∫•t
    FOREIGN KEY (prediction_id) REFERENCES health_predictions(prediction_id)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (disease_id) REFERENCES diseases(disease_id)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- c√≥ th√™m 1 bi·∫øn m·ªõi disease_name_raw bi·∫øn n√†y s·∫Ω ch·ª©a t√™n b·ªánh t·ª´ gpt n·∫øu nh∆∞ danh s√°ch b·ªánh hi·ªán t·∫°i ch∆∞a c√≥
-- mapping l·∫°i nh·ªØng t√™n ƒë√£ l∆∞u t·∫°m m√† nay ƒë√£ c√≥ ID
UPDATE prediction_diseases pd
JOIN diseases d ON pd.disease_name_raw = d.name
SET pd.disease_id = d.id
WHERE pd.disease_id IS NULL;


-- B·∫£ng l∆∞u c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi ƒë·ªÉ hu·∫•n luy·ªán ho·∫∑c ph·ª•c v·ª• chatbot
CREATE TABLE chatbot_knowledge_base (
    kb_id INT AUTO_INCREMENT PRIMARY KEY,
	intent VARCHAR(100),                                 -- √Ω ƒë·ªãnh
    question TEXT NOT NULL,                              -- c√¢u h·ªèi m·∫´u
    answer TEXT NOT NULL,                                -- c√¢u tr·∫£ l·ªùi t∆∞∆°ng ·ª©ng
    category VARCHAR(100),                               -- ph√¢n lo·∫°i c√¢u h·ªèi (t√πy ch·ªçn)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP        -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);
----------------------------------------------------------------4. Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠-------------------------------------------------------------------------------
-- B·∫£ng product_categories: Danh m·ª•c s·∫£n ph·∫©m
CREATE TABLE product_categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,          -- Kh√≥a ch√≠nh
    name VARCHAR(255) NOT NULL,                          -- T√™n danh m·ª•c
    description TEXT,                                    -- M√¥ t·∫£ danh m·ª•c
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP
);

-- B·∫£ng products: Danh s√°ch s·∫£n ph·∫©m
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,           -- Kh√≥a ch√≠nh
    category_id INT,                                     -- Li√™n k·∫øt ƒë·∫øn danh m·ª•c
    name VARCHAR(255) NOT NULL,                          -- T√™n s·∫£n ph·∫©m
    description TEXT,                                    -- M√¥ t·∫£ s·∫£n ph·∫©m
    price DECIMAL(16, 0) NOT NULL,                       -- Gi√°
    stock INT DEFAULT 0,                                 -- T·ªìn kho
    image_url TEXT,                                      -- ·∫¢nh s·∫£n ph·∫©m (n·∫øu c√≥)
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES product_categories(category_id)
);

-- B·∫£ng th√¥ng tin ƒë∆°n thu·ªëc
CREATE TABLE medicines (
    medicine_id INT PRIMARY KEY,                         -- Kh√≥a ch√≠nh, tr√πng v·ªõi product_id
    active_ingredient VARCHAR(255),                      -- Ho·∫°t ch·∫•t ch√≠nh
    dosage_form VARCHAR(100),                            -- D·∫°ng b√†o ch·∫ø (vi√™n, ·ªëng, g√≥i, ...)
    unit VARCHAR(50),                                    -- ƒê∆°n v·ªã t√≠nh: vi√™n, ml, ...
    usage_instructions TEXT,                             -- H∆∞·ªõng d·∫´n d√πng thu·ªëc
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (medicine_id) REFERENCES products(product_id) ON DELETE CASCADE
);

-- B·∫£ng ƒë∆°n thu·ªëc li√™n k·∫øt v·ªõi s·∫£n ph·∫©m
CREATE TABLE prescription_products (
    id INT AUTO_INCREMENT PRIMARY KEY,                    -- Kh√≥a ch√≠nh
    prescription_id INT NOT NULL,                         -- Li√™n k·∫øt ƒë∆°n thu·ªëc
    product_id INT NULL,                                  -- C√≥ th·ªÉ NULL n·∫øu kh√¥ng r√µ m√£ s·∫£n ph·∫©m
    quantity INT NOT NULL,                                -- S·ªë l∆∞·ª£ng
    dosage TEXT,                                           -- Li·ªÅu d√πng
    usage_time TEXT,                                       -- Th·ªùi gian s·ª≠ d·ª•ng
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (prescription_id) REFERENCES prescriptions(prescription_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);



-- B·∫£ng product_reviews: Ng∆∞·ªùi d√πng ƒë√°nh gi√° s·∫£n ph·∫©m
CREATE TABLE product_reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,            -- Kh√≥a ch√≠nh
    product_id INT NOT NULL,                             -- Li√™n k·∫øt ƒë·∫øn s·∫£n ph·∫©m
    user_id INT NOT NULL,                                -- Ng∆∞·ªùi ƒë√°nh gi√°
    rating INT CHECK (rating BETWEEN 1 AND 5),           -- S·ªë sao (1‚Äì5)
    comment TEXT,                                        -- Nh·∫≠n x√©t
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP             -- Th·ªùi gian c·∫≠p nh·∫≠t th√¥ng b√°o (n·∫øu b·ªã ch·ªânh s·ª≠a)
        ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- B·∫£ng orders: ƒê∆°n h√†ng c·ªßa ng∆∞·ªùi d√πng
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,                 -- M√£ ƒë∆°n h√†ng ho·∫∑c gi·ªè h√†ng
    user_id INT NOT NULL,                                    -- Ng∆∞·ªùi s·ªü h·ªØu
    address_id INT,                                          -- Li√™n k·∫øt ƒë·∫øn b·∫£ng user_addresses, ƒë·ªÉ bi·∫øt ng∆∞·ªùi d√πng ch·ªçn ƒë·ªãa ch·ªâ n√†o l√∫c ƒë·∫∑t
    shipping_address TEXT,                                   -- L∆∞u snapshot ƒë·ªãa ch·ªâ th·∫≠t t·∫°i th·ªùi ƒëi·ªÉm ƒë·∫∑t h√†ng, ph√≤ng khi ng∆∞·ªùi d√πng ƒë·ªïi ƒë·ªãa ch·ªâ sau ƒë√≥
    total DECIMAL(16, 0),                                    -- T·ªïng ti·ªÅn (null n·∫øu ch∆∞a x√°c nh·∫≠n)
    payment_method VARCHAR(50),                              -- COD / Momo / VNPay...
    payment_status VARCHAR(50) DEFAULT 'pending',            -- Tr·∫°ng th√°i thanh to√°n
    status ENUM('cart', 'pending', 'processing', 'shipped', 'completed', 'cancelled') DEFAULT 'cart',  -- Tr·∫°ng th√°i ƒë∆°n h√†ng
    order_note TEXT,                                         -- Ghi ch√∫ c·ªßa kh√°ch (tu·ª≥ ch·ªçn)
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,          -- Th·ªùi ƒëi·ªÉm t·∫°o ƒë∆°n / gi·ªè
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP 
        ON UPDATE CURRENT_TIMESTAMP,                         -- C·∫≠p nh·∫≠t cu·ªëi

    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (address_id) REFERENCES user_addresses(address_id)
);


-- B·∫£ng order_items: Chi ti·∫øt t·ª´ng s·∫£n ph·∫©m trong ƒë∆°n h√†ng
CREATE TABLE order_items (
    item_id INT AUTO_INCREMENT PRIMARY KEY,              -- Kh√≥a ch√≠nh
    order_id INT NOT NULL,                               -- Li√™n k·∫øt ƒë·∫øn ƒë∆°n h√†ng
    product_id INT NOT NULL,                             -- S·∫£n ph·∫©m trong ƒë∆°n
    quantity INT NOT NULL,                               -- S·ªë l∆∞·ª£ng mua
    unit_price DECIMAL(16, 0) NOT NULL,                  -- Gi√° m·ªói s·∫£n ph·∫©m l√∫c mua
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- B·∫£ng payments: Th√¥ng tin thanh to√°n ƒë∆°n h√†ng
CREATE TABLE payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,             -- Kh√≥a ch√≠nh
    user_id INT,
    order_id INT NOT NULL,                                 -- Li√™n k·∫øt ƒë·∫øn ƒë∆°n h√†ng
    payment_method VARCHAR(50) NOT NULL,                   -- Ph∆∞∆°ng th·ª©c (VNPay, Momo, COD...)
    payment_status VARCHAR(50) DEFAULT 'pending',          -- pending, completed, failed
    amount DECIMAL(16, 0) NOT NULL,                        -- S·ªë ti·ªÅn thanh to√°n
    payment_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,      -- Th·ªùi gian thanh to√°n
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

----------------------------------------------------------------5. Medical services-------------------------------------------------------------------------------

-- B·∫£ng danh m·ª•c d·ªãch v·ª•
CREATE TABLE service_categories (
    id INT PRIMARY KEY AUTO_INCREMENT, -- Kh√≥a ch√≠nh, t·ª± tƒÉng
    name VARCHAR(100) NOT NULL, -- T√™n danh m·ª•c d·ªãch v·ª•
    slug VARCHAR(100) NOT NULL UNIQUE, -- ƒê∆∞·ªùng d·∫´n URL th√¢n thi·ªán, duy nh·∫•t
    icon VARCHAR(50) NOT NULL, -- T√™n ho·∫∑c m√£ icon ƒë·∫°i di·ªán (vd: font-awesome)
    description TEXT, -- M√¥ t·∫£ chi ti·∫øt v·ªÅ danh m·ª•c
    display_order INT DEFAULT 0, -- Th·ª© t·ª± hi·ªÉn th·ªã ∆∞u ti√™n
    is_active BOOLEAN DEFAULT TRUE, -- Tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa danh m·ª•c
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi gian t·∫°o
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- Th·ªùi gian c·∫≠p nh·∫≠t
);


-- B·∫£ng d·ªãch v·ª• ch√≠nh
CREATE TABLE services (
    id INT PRIMARY KEY AUTO_INCREMENT, -- Kh√≥a ch√≠nh
    category_id INT, -- Kh√≥a ngo·∫°i li√™n k·∫øt ƒë·∫øn b·∫£ng service_categories
    name VARCHAR(200) NOT NULL, -- T√™n d·ªãch v·ª•
    slug VARCHAR(200) NOT NULL UNIQUE, -- Slug duy nh·∫•t cho d·ªãch v·ª• (URL)
    short_description VARCHAR(500), -- M√¥ t·∫£ ng·∫Øn (hi·ªÉn th·ªã s∆° l∆∞·ª£c)
    full_description TEXT, -- M√¥ t·∫£ ƒë·∫ßy ƒë·ªß chi ti·∫øt
    icon VARCHAR(50), -- Bi·ªÉu t∆∞·ª£ng ƒë·∫°i di·ªán cho d·ªãch v·ª•
    image VARCHAR(255), -- ƒê∆∞·ªùng d·∫´n ·∫£nh minh h·ªça
    price_from DECIMAL(16,0), -- Gi√° kh·ªüi ƒëi·ªÉm
    price_to DECIMAL(16,0), -- Gi√° k·∫øt th√∫c (gi√° t·ªëi ƒëa)
    is_featured BOOLEAN DEFAULT FALSE, -- C√≥ ph·∫£i d·ªãch v·ª• n·ªïi b·∫≠t kh√¥ng
    is_emergency BOOLEAN DEFAULT FALSE, -- C√≥ ph·∫£i d·ªãch v·ª• kh·∫©n c·∫•p kh√¥ng
    is_active BOOLEAN DEFAULT TRUE, -- Tr·∫°ng th√°i k√≠ch ho·∫°t
    display_order INT DEFAULT 0, -- Th·ª© t·ª± hi·ªÉn th·ªã
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Ng√†y c·∫≠p nh·∫≠t
    FOREIGN KEY (category_id) REFERENCES service_categories(id) -- Kh√≥a ngo·∫°i ƒë·∫øn danh m·ª•c
);


-- B·∫£ng t√≠nh nƒÉng c·ªßa d·ªãch v·ª•
CREATE TABLE service_features (
    id INT PRIMARY KEY AUTO_INCREMENT, -- Kh√≥a ch√≠nh
    service_id INT, -- Kh√≥a ngo·∫°i li√™n k·∫øt ƒë·∫øn b·∫£ng services
    feature_name VARCHAR(200) NOT NULL, -- T√™n t√≠nh nƒÉng
    description TEXT, -- M√¥ t·∫£ chi ti·∫øt t√≠nh nƒÉng
    icon VARCHAR(50), -- Bi·ªÉu t∆∞·ª£ng c·ªßa t√≠nh nƒÉng (tu·ª≥ ch·ªçn)
    display_order INT DEFAULT 0, -- Th·ª© t·ª± hi·ªÉn th·ªã c·ªßa t√≠nh nƒÉng
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o
    FOREIGN KEY (service_id) REFERENCES services(id) -- Kh√≥a ngo·∫°i ƒë·∫øn b·∫£ng d·ªãch v·ª•
);


-- B·∫£ng g√≥i d·ªãch v·ª•
CREATE TABLE service_packages (
    id INT PRIMARY KEY AUTO_INCREMENT, -- Kh√≥a ch√≠nh
    name VARCHAR(200) NOT NULL, -- T√™n g√≥i d·ªãch v·ª•
    slug VARCHAR(200) NOT NULL UNIQUE, -- Slug duy nh·∫•t cho URL g√≥i
    description TEXT, -- M√¥ t·∫£ chi ti·∫øt g√≥i
    price DECIMAL(16,0), -- Gi√° c·ªßa g√≥i
    duration VARCHAR(50), -- Th·ªùi h·∫°n c·ªßa g√≥i (vd: "1 l·∫ßn", "1 th√°ng")
    is_featured BOOLEAN DEFAULT FALSE, -- G√≥i n·ªïi b·∫≠t hay kh√¥ng
    is_active BOOLEAN DEFAULT TRUE, -- G√≥i c√≥ ƒëang ho·∫°t ƒë·ªông hay kh√¥ng
    display_order INT DEFAULT 0, -- Th·ª© t·ª± hi·ªÉn th·ªã
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- Ng√†y c·∫≠p nh·∫≠t
);


-- B·∫£ng chi ti·∫øt t√≠nh nƒÉng c·ªßa g√≥i d·ªãch v·ª•
CREATE TABLE package_features (
    id INT PRIMARY KEY AUTO_INCREMENT, -- Kh√≥a ch√≠nh
    package_id INT, -- Kh√≥a ngo·∫°i li√™n k·∫øt ƒë·∫øn b·∫£ng service_packages
    feature_name VARCHAR(200) NOT NULL, -- T√™n t√≠nh nƒÉng trong g√≥i
    description TEXT, -- M√¥ t·∫£ chi ti·∫øt t√≠nh nƒÉng
    display_order INT DEFAULT 0, -- Th·ª© t·ª± hi·ªÉn th·ªã
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o
    FOREIGN KEY (package_id) REFERENCES service_packages(id) -- Kh√≥a ngo·∫°i ƒë·∫øn g√≥i d·ªãch v·ª•
);

----------------------------------------------------------------6. Blog-------------------------------------------------------------------------------

-- T·∫°o b·∫£ng categories (danh m·ª•c b√†i vi·∫øt)
CREATE TABLE IF NOT EXISTS blog_categories (
    category_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    slug VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- T·∫°o b·∫£ng authors (t√°c gi·∫£)
CREATE TABLE IF NOT EXISTS blog_authors (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    name VARCHAR(100) NOT NULL,
    avatar VARCHAR(255),
    bio TEXT,
    title VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE SET NULL
);

-- T·∫°o b·∫£ng posts (b√†i vi·∫øt)
CREATE TABLE IF NOT EXISTS blog_posts (
    post_id INT PRIMARY KEY AUTO_INCREMENT,
    author_id INT,
    category_id INT,
    title VARCHAR(255) NOT NULL,
    slug VARCHAR(255) NOT NULL UNIQUE,
    content TEXT NOT NULL,
    excerpt TEXT,
    featured_image VARCHAR(255),
    status ENUM('draft', 'published', 'archived') DEFAULT 'draft',
    is_featured BOOLEAN DEFAULT FALSE,
    view_count INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    published_at TIMESTAMP NULL,
    FOREIGN KEY (author_id) REFERENCES blog_authors(author_id) ON DELETE SET NULL,
    FOREIGN KEY (category_id) REFERENCES blog_categories(category_id) ON DELETE SET NULL
);



-- T·∫°o b·∫£ng categories (danh m·ª•c b√†i vi·∫øt)
CREATE TABLE IF NOT EXISTS blog_categories (
    category_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    slug VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- T·∫°o b·∫£ng authors (t√°c gi·∫£)
CREATE TABLE IF NOT EXISTS blog_authors (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    name VARCHAR(100) NOT NULL,
    avatar VARCHAR(255),
    bio TEXT,
    title VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE SET NULL
);

-- T·∫°o b·∫£ng posts (b√†i vi·∫øt)
CREATE TABLE IF NOT EXISTS blog_posts (
    post_id INT PRIMARY KEY AUTO_INCREMENT,
    author_id INT,
    category_id INT,
    title VARCHAR(255) NOT NULL,
    slug VARCHAR(255) NOT NULL UNIQUE,
    content TEXT NOT NULL,
    excerpt TEXT,
    featured_image VARCHAR(255),
    status ENUM('draft', 'published', 'archived') DEFAULT 'draft',
    is_featured BOOLEAN DEFAULT FALSE,
    view_count INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    published_at TIMESTAMP NULL,
    FOREIGN KEY (author_id) REFERENCES blog_authors(author_id) ON DELETE SET NULL,
    FOREIGN KEY (category_id) REFERENCES blog_categories(category_id) ON DELETE SET NULL
);